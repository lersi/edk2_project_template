name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  BUILD_TARGET: LiorPkg
  EDK2_REPO: https://github.com/tianocore/edk2.git
  EDK2_PATH: ~/edk2

jobs:
  build-linux:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - uses: actions/checkout@v3

    - name: EDK2 cache
      id: cache-edk2
      uses: actions/cache@v3
      with:
        path: ${{env.EDK2_PATH}}
        key: ${{ runner.os }}-edk2

    - name: Clone EDK2
      if: steps.cache-edk2.outputs.cache-hit != 'true'
      run: |
        git clone ${{env.EDK2_REPO}} ${{env.EDK2_PATH}}
        cd ${{env.EDK2_PATH}}
        git submodule init --update
      
    
    - name: Fetch EDK2
      if: steps.cache-edk2.outputs.cache-hit == 'true'
      run: |
        cd ${{env.EDK2_PATH}}
        git fetch
        git submodule update

    - name: Install dependencies
      run: apt install build-essential uuid-dev iasl git  nasm  python-is-python3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DLOCAL_EDK2=${{env.EDK2_PATH}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target ${{env.BUILD_TARGET}}

    
      
